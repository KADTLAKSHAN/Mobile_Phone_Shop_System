package ui;

import classes.Category;
import database.MyConnection;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author tharindulakshan
 */
public class ManageCategory extends javax.swing.JFrame {

    /**
     * Creates new form ManageCategory
     */
    public ManageCategory() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageCategoryTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCategory = new javax.swing.JTable();
        lblCategoryID = new javax.swing.JLabel();
        txtCategoryID = new javax.swing.JTextField();
        lblCategoryName = new javax.swing.JLabel();
        txtSearchBar = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        txtCategoryName = new javax.swing.JTextField();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblManageCategoryTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        lblManageCategoryTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblManageCategoryTitle.setText("Manage Category");
        getContentPane().add(lblManageCategoryTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(399, 6, -1, -1));

        tblCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ));
        tblCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCategory);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 90, 505, 457));

        lblCategoryID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblCategoryID.setText("Category ID");
        getContentPane().add(lblCategoryID, new org.netbeans.lib.awtextra.AbsoluteConstraints(581, 224, -1, -1));

        txtCategoryID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtCategoryID, new org.netbeans.lib.awtextra.AbsoluteConstraints(581, 248, 366, -1));

        lblCategoryName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblCategoryName.setText("Category Name");
        getContentPane().add(lblCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(581, 290, -1, -1));

        txtSearchBar.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtSearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(581, 90, 366, 23));

        btnSearch.setBackground(new java.awt.Color(0, 153, 153));
        btnSearch.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(871, 119, -1, -1));

        btnAdd.setBackground(new java.awt.Color(0, 255, 255));
        btnAdd.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 410, -1, -1));

        btnUpdate.setBackground(new java.awt.Color(0, 204, 102));
        btnUpdate.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(699, 410, -1, -1));

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 410, -1, -1));

        btnReset.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(875, 410, -1, -1));

        btnClose.setBackground(new java.awt.Color(255, 51, 51));
        btnClose.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(982, 570, -1, -1));

        txtCategoryName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(581, 314, 366, -1));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ManageUserBackground.jpg"))); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        Category search = new Category();
        String searchValue = txtSearchBar.getText();
        search.setCategoryID(searchValue);
        search.setCategoryName(searchValue);

        if (search.searchCategory()) {
            JOptionPane.showMessageDialog(null, "CATEGORY FOUND!", "CATEGORY SEARCHING..", JOptionPane.INFORMATION_MESSAGE);
            txtCategoryID.setText(search.getCategoryID());
            txtCategoryName.setText(search.getCategoryName());

            DefaultTableModel model = (DefaultTableModel) tblCategory.getModel();
            model.setRowCount(0);

            model.addRow(new String[]{search.getCategoryID(), search.getCategoryName()});
        } else {
            JOptionPane.showMessageDialog(null, "CATEGORY NOT FOUND, TRY AGAIN!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        viewAll();
    }//GEN-LAST:event_formComponentShown

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        if (checkEmptyFields()) {
            Category add = new Category();
            add.setCategoryID(txtCategoryID.getText());
            add.setCategoryName(txtCategoryName.getText());

            if (add.addCategory()) {
                JOptionPane.showMessageDialog(null, "NEW CATEGORY ADDED!", "NEW CATEGORY", JOptionPane.INFORMATION_MESSAGE);
            } else {

                JOptionPane.showMessageDialog(null, "CATEGORY NOT INSERTED, TRY AGAIN!", "ERROR", JOptionPane.ERROR_MESSAGE);

            }

            viewAll();
            clear();
            btnUpdate.setEnabled(false);
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Category update = new Category();
        update.setCategoryID(txtCategoryID.getText());
        update.setCategoryName(txtCategoryName.getText());

        if (update.updateCategory()) {
            JOptionPane.showMessageDialog(null, "CATEGORY UPDATED!", "CATEGORY UPDATE", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "CATEGORY NOT UPDATED, TRY AGAIN!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

        viewAll();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Category delete = new Category();
        delete.setCategoryID(txtCategoryID.getText());

        if (delete.deleteCategory()) {
            JOptionPane.showMessageDialog(null, "CATEGORY DELETED!", "CATEGORY DELETE", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "CATEGORY NOT DELETED, TRY AGAIN!", "CATEGORY NOT FOUND!", JOptionPane.ERROR_MESSAGE);
        }

        viewAll();
        clear();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtCategoryID.setText(null);
        txtCategoryName.setText(null);
        txtSearchBar.setText(null);

        btnAdd.setEnabled(true);
        viewAll();
    }//GEN-LAST:event_btnResetActionPerformed

    private void tblCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoryMouseClicked
        int index = tblCategory.getSelectedRow();
        TableModel model = tblCategory.getModel();

        String catID = model.getValueAt(index, 0).toString();
        txtCategoryID.setText(catID);

        String catName = model.getValueAt(index, 1).toString();
        txtCategoryName.setText(catName);

        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_tblCategoryMouseClicked

    private void clear() {
        txtCategoryID.setText(null);
        txtCategoryName.setText(null);
        txtSearchBar.setText(null);
    }

    private void viewAll() {
        DefaultTableModel model = (DefaultTableModel) tblCategory.getModel();
        model.setRowCount(0);

        Category category = new Category();
        category.viewAll();

        try {

            MyConnection.rs = MyConnection.pst.executeQuery();

            while (MyConnection.rs.next()) {
                model.addRow(new String[]{MyConnection.rs.getString(1), MyConnection.rs.getString(2)});

            }
            MyConnection.con.close();
            MyConnection.clear();

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "DB_CATEGORY_VIEW_ALL_ERROR: " + e, "CATEGORY VIEW ALL ERROR", JOptionPane.ERROR_MESSAGE);

        }
    }

    private boolean checkEmptyFields() {

        JTextField checkEmptyFilds[] = {txtCategoryID, txtCategoryName};

        for (JTextField txt : checkEmptyFilds) {

            String field = txt.getText().trim();

            if (field.isEmpty()) {

                JOptionPane.showMessageDialog(null, "CHECK YOUR BLANK FIELDS PLEASE!", "BLANK", JOptionPane.ERROR_MESSAGE
                );
                return false;
            }

        }

        return true;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCategory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblCategoryID;
    private javax.swing.JLabel lblCategoryName;
    private javax.swing.JLabel lblManageCategoryTitle;
    private javax.swing.JTable tblCategory;
    private javax.swing.JTextField txtCategoryID;
    private javax.swing.JTextField txtCategoryName;
    private javax.swing.JTextField txtSearchBar;
    // End of variables declaration//GEN-END:variables
}
