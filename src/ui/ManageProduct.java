package ui;

import classes.Product;
import database.MyConnection;
import javax.management.modelmbean.ModelMBean;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author tharindulakshan
 */
public class ManageProduct extends javax.swing.JFrame {

    private int totalQuantity = 0;

    /**
     * Creates new form ManageProduct
     */
    public ManageProduct() {
        initComponents();
        setLocationRelativeTo(null);
        getAllBrand();
        getAllCategory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageProductTitle = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        lblProductID = new javax.swing.JLabel();
        txtProductID = new javax.swing.JTextField();
        lblProductName = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        lblProductQuantity = new javax.swing.JLabel();
        txtProductQuantity = new javax.swing.JTextField();
        lblModel = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        cmbCategory = new javax.swing.JComboBox<>();
        lblCategory = new javax.swing.JLabel();
        lblBrand = new javax.swing.JLabel();
        cmbBrand = new javax.swing.JComboBox<>();
        lblProductPrice = new javax.swing.JLabel();
        txtProductPrice = new javax.swing.JTextField();
        txtSearchBar = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblManageProductTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        lblManageProductTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblManageProductTitle.setText("Manage Product");
        getContentPane().add(lblManageProductTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 6, -1, -1));

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price", "Quantity", "Model", "Category ID", "Category Name", "Brand ID", "Brand Name"
            }
        ));
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblProduct);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 57, 965, 305));

        btnAdd.setBackground(new java.awt.Color(0, 255, 255));
        btnAdd.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(686, 512, -1, -1));

        btnUpdate.setBackground(new java.awt.Color(0, 204, 51));
        btnUpdate.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 512, -1, -1));

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(861, 512, -1, -1));

        btnReset.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(946, 512, -1, -1));

        btnClose.setBackground(new java.awt.Color(255, 51, 0));
        btnClose.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(976, 574, -1, -1));

        lblProductID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblProductID.setForeground(new java.awt.Color(255, 255, 255));
        lblProductID.setText("Product ID");
        getContentPane().add(lblProductID, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 368, -1, -1));

        txtProductID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtProductID, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 392, 268, -1));

        lblProductName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblProductName.setForeground(new java.awt.Color(255, 255, 255));
        lblProductName.setText("Product Name");
        getContentPane().add(lblProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 428, -1, -1));

        txtProductName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 452, 268, -1));

        lblProductQuantity.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblProductQuantity.setForeground(new java.awt.Color(255, 255, 255));
        lblProductQuantity.setText("Product Quantity");
        getContentPane().add(lblProductQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 488, -1, -1));

        txtProductQuantity.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtProductQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 512, 268, -1));

        lblModel.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblModel.setForeground(new java.awt.Color(255, 255, 255));
        lblModel.setText("Model");
        getContentPane().add(lblModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 368, -1, -1));

        txtModel.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 392, 268, -1));

        cmbCategory.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(cmbCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 452, 268, -1));

        lblCategory.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblCategory.setForeground(new java.awt.Color(255, 255, 255));
        lblCategory.setText("Category");
        getContentPane().add(lblCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 428, -1, -1));

        lblBrand.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBrand.setForeground(new java.awt.Color(255, 255, 255));
        lblBrand.setText("Brand");
        getContentPane().add(lblBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 488, -1, -1));

        cmbBrand.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(cmbBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 512, 268, -1));

        lblProductPrice.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblProductPrice.setForeground(new java.awt.Color(255, 255, 255));
        lblProductPrice.setText("Product Price");
        getContentPane().add(lblProductPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 548, -1, -1));

        txtProductPrice.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtProductPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 574, 268, -1));

        txtSearchBar.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        getContentPane().add(txtSearchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(686, 392, 332, -1));

        lblSearch.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(255, 255, 255));
        lblSearch.setText("Search Here");
        getContentPane().add(lblSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(686, 368, -1, -1));

        btnSearch.setBackground(new java.awt.Color(204, 204, 0));
        btnSearch.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(942, 422, -1, -1));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ManageUserBackground.jpg"))); // NOI18N
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        int index = tblProduct.getSelectedRow();
        TableModel model = tblProduct.getModel();

        String productID = model.getValueAt(index, 0).toString();
        txtProductID.setText(productID);

        String productName = model.getValueAt(index, 1).toString();
        txtProductName.setText(productName);

        String price = (model.getValueAt(index, 2).toString());
        txtProductPrice.setText(price);

        String quantity = model.getValueAt(index, 3).toString();
        totalQuantity = 0;
        totalQuantity = Integer.parseInt(quantity);

        String productModel = model.getValueAt(index, 4).toString();
        txtModel.setText(productModel);

        String categoryName = model.getValueAt(index, 6).toString();
        cmbCategory.setSelectedItem(categoryName);

        String brandName = model.getValueAt(index, 8).toString();
        cmbBrand.setSelectedItem(brandName);

        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_tblProductMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        if (checkEmptyFields()) {

            Product add = new Product();
            add.setProductID(txtProductID.getText());
            add.setProductName(txtProductName.getText());
            add.setProductPrice(Double.parseDouble(txtProductPrice.getText()));
            add.setQuantity(Integer.parseInt(txtProductQuantity.getText()));
            add.setModel(txtModel.getText());
            add.setCategoryFK(add.categorySearchByName(cmbCategory.getSelectedItem().toString()));
            add.setBrandFK(add.brandSearchByName(cmbBrand.getSelectedItem().toString()));

            if (add.addProduct()) {
                JOptionPane.showMessageDialog(null, "NEW PRODUCT ADDED!", "NEW PRODUCT", JOptionPane.INFORMATION_MESSAGE);
            } else {

                JOptionPane.showMessageDialog(null, "PRODUCT NOT INSERTED, TRY AGAIN!", "ERROR", JOptionPane.ERROR_MESSAGE);

            }

            viewAll();
            clear();
            btnUpdate.setEnabled(false);

        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        Product update = new Product();
        update.setProductID(txtProductID.getText());
        update.setProductName(txtProductName.getText());
        update.setProductPrice(Double.parseDouble(txtProductPrice.getText()));

        if (!txtProductQuantity.getText().equals("")) {
            totalQuantity = totalQuantity + (Integer.parseInt(txtProductQuantity.getText()));

            update.setQuantity(totalQuantity);
        } else {
            update.setQuantity(totalQuantity);
        }

        update.setModel(txtModel.getText());
        update.setCategoryFK(update.categorySearchByName(cmbCategory.getSelectedItem().toString()));
        update.setBrandFK(update.brandSearchByName(cmbBrand.getSelectedItem().toString()));

        if (update.updateProduct()) {
            JOptionPane.showMessageDialog(null, "PRODUCT UPDATED!", "PRODUCT UPDATE", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "PRODUCT NOT UPDATED, TRY AGAIN!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

        viewAll();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Product delete = new Product();
        delete.setProductID(txtProductID.getText());

        if (delete.deleteProduct()) {
            JOptionPane.showMessageDialog(null, "PRODUCT DELETED!", "PRODUCT DELETE", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "PRODUCT NOT DELETED, TRY AGAIN!", "PRODUCT NOT FOUND!", JOptionPane.ERROR_MESSAGE);
        }

        viewAll();
        clear();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtProductID.setText(null);
        txtProductName.setText(null);
        txtProductQuantity.setText(null);
        txtModel.setText(null);
        txtProductPrice.setText(null);
        txtSearchBar.setText(null);

        btnAdd.setEnabled(true);
        viewAll();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        viewAll();
    }//GEN-LAST:event_formComponentShown

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        Product search = new Product();

        search.setProductID(txtSearchBar.getText());
        search.setProductName(txtSearchBar.getText());

        if (search.searchProduct()) {
            JOptionPane.showMessageDialog(null, "PRODUCT FOUND!", "PRODUCT SEARCHING..", JOptionPane.INFORMATION_MESSAGE);
            txtProductID.setText(search.getProductID());
            txtProductName.setText(search.getProductName());
            txtProductPrice.setText("" + search.getProductPrice());
            txtProductQuantity.setText("" + search.getQuantity());
            txtModel.setText(search.getModel());

            cmbCategory.setSelectedItem(search.categorySearchByID(search.getCategoryFK()));
            cmbBrand.setSelectedItem(search.brandSearchByID(search.getBrandFK()));

            DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
            model.setRowCount(0);

            model.addRow(new String[]{search.getProductID(), search.getProductName(), "" + search.getProductPrice(), "" + search.getQuantity(), search.getModel(), search.getCategoryFK(), search.categorySearchByID(search.getCategoryFK()), search.getBrandFK(), search.brandSearchByID(search.getBrandFK())});
        } else {
            JOptionPane.showMessageDialog(null, "USER NOT FOUND, TRY AGAIN!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void viewAll() {

        DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
        model.setRowCount(0);

        Product product = new Product();
        product.viewAll();

        try {

            MyConnection.rs = MyConnection.pst.executeQuery();

            while (MyConnection.rs.next()) {
                model.addRow(new String[]{MyConnection.rs.getString(1), MyConnection.rs.getString(2), MyConnection.rs.getString(3), MyConnection.rs.getString(4), MyConnection.rs.getString(5), MyConnection.rs.getString(6), MyConnection.rs.getString(9), MyConnection.rs.getString(7), MyConnection.rs.getString(11)});

            }
            MyConnection.con.close();
            MyConnection.clear();

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "DB_PRODUCT_VIEW_ALL_ERROR: " + e, "PRODUCT VIEW ALL ERROR", JOptionPane.ERROR_MESSAGE);

        }

    }

    private void clear() {

        txtProductID.setText(null);
        txtProductName.setText(null);
        txtProductQuantity.setText(null);
        txtModel.setText(null);
        txtProductPrice.setText(null);
        txtSearchBar.setText(null);
        totalQuantity = 0;

    }

    private void getAllCategory() {

        try {
            String sql = "SELECT categoryID, categoryName FROM tblCategory";

            MyConnection.getConnection();
            MyConnection.pst = MyConnection.con.prepareStatement(sql);
            MyConnection.rs = MyConnection.pst.executeQuery();

            while (MyConnection.rs.next()) {
                String categoryID = MyConnection.rs.getString(1);
                String categoryName = MyConnection.rs.getString(2);
                cmbCategory.addItem(categoryName);
            }
            MyConnection.con.close();

        } catch (Exception e) {
            System.out.println("Category Combo box error (constructor method)" + e.getMessage());
        }

    }

    private void getAllBrand() {

        try {
            String sql = "SELECT brandID, brandName FROM tblBrand";

            MyConnection.getConnection();
            MyConnection.pst = MyConnection.con.prepareStatement(sql);
            MyConnection.rs = MyConnection.pst.executeQuery();

            while (MyConnection.rs.next()) {
                String brandID = MyConnection.rs.getString(1);
                String brandName = MyConnection.rs.getString(2);
                cmbBrand.addItem(brandName);
            }
            MyConnection.con.close();

        } catch (Exception e) {
            System.out.println("Brand Combo box error (constructor method)" + e.getMessage());
        }

    }

    private boolean checkEmptyFields() {

        JTextField checkEmptyFilds[] = {txtProductID, txtProductName, txtProductPrice, txtProductQuantity, txtModel};

        for (JTextField txt : checkEmptyFilds) {

            String field = txt.getText().trim();

            if (field.isEmpty()) {

                JOptionPane.showMessageDialog(null, "CHECK YOUR BLANK FIELDS PLEASE!", "BLANK", JOptionPane.ERROR_MESSAGE
                );
                return false;
            }

        }

        return true;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbBrand;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblManageProductTitle;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblProductID;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblProductPrice;
    private javax.swing.JLabel lblProductQuantity;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtProductPrice;
    private javax.swing.JTextField txtProductQuantity;
    private javax.swing.JTextField txtSearchBar;
    // End of variables declaration//GEN-END:variables
}
